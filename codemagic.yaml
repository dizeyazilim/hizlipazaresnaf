workflows:
  ios_simulator:
    name: iOS Simulator Build (Flutter.h fix)
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      flutter: 3.35.3
      xcode: 16.1
      cocoapods: 1.16.2
    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - $HOME/Library/Developer/Xcode/DerivedData
        - $HOME/Library/Caches/CocoaPods
    triggering:
      events: [ push ]
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Flutter hazırlık (precache iOS)
        script: |
          flutter --version
          # iOS engine ve header’ları indir (sim hatalarının çoğu bunlardan)
          flutter precache --ios --force
          flutter pub get
      - name: Pod temizliği
        script: |
          # Temiz bir ortam
          rm -rf ios/Pods ios/Podfile.lock
          cd ios
          pod repo update
          pod deintegrate || true
          cd ..
      - name: Podfile’ı DOĞRU şablonla yaz
        script: |
          cat > ios/Podfile <<'PODFILE'
          platform :ios, '13.0'

          require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root = `flutter --flutter-root`.strip)

          flutter_ios_podfile_setup

          target 'Runner' do
            # Çoğu projede framework’e gerek yok; sorun çıkarıyorsa açma.
            # use_frameworks! :linkage => :static if ENV['USE_FRAMEWORKS'] == 'true'
            use_modular_headers!

            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            flutter_additional_ios_build_settings(installer)

            # Apple Silicon sim build karışıklıklarını engelle
            installer.pods_project.targets.each do |t|
              t.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
                config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
              end
            end
          end
          PODFILE
          echo "Podfile yazıldı:"
          tail -n +1 ios/Podfile
      - name: Pods kurulum
        script: |
          cd ios
          pod install --verbose
          cd ..
      - name: iOS (Simulator, no codesign) build
        script: |
          # En hızlı seçenek: debug sim
          flutter build ios --simulator --debug --no-codesign
          # Release sim istersen:
          # flutter build ios --simulator --release --no-codesign
      - name: .app paketle (zip)
        script: |
          APP_DIR="build/ios/iphonesimulator"
          APP_PATH=$(find "$APP_DIR" -maxdepth 1 -name "*.app" | head -n1)
          if [ -z "$APP_PATH" ]; then
            echo "Simulator .app bulunamadı"; exit 1
          fi
          cd "$APP_DIR"
          zip -r "Runner.app.zip" "$(basename "$APP_PATH")"
          echo "Ziplendi: $APP_DIR/Runner.app.zip"
    artifacts:
      - build/ios/iphonesimulator/*.app
      - build/ios/iphonesimulator/Runner.app.zip
      - flutter_drive.log
