workflows:
  ios_simulator:
    name: iOS Simulator (no codesign)
    max_build_duration: 30
    instance_type: mac_mini_m1
    environment:
      flutter: 3.35.3
      xcode: 16.1
      cocoapods: 1.16.2
    cache:
      cache_paths:
        - ~/.pub-cache
        - ios/Pods
        - $HOME/Library/Caches/CocoaPods
        - $HOME/Library/Developer/Xcode/DerivedData
    triggering:
      events: [ push ]
      branch_patterns:
        - pattern: main
          include: true
          source: true
    scripts:
      - name: Versions & precache
        script: |
          set -euxo pipefail
          flutter --version
          flutter precache --ios --force
          flutter pub get
      - name: Write Podfile (safe, no --flutter-root)
        script: |
          set -euxo pipefail
          cat > ios/Podfile <<'PODFILE'
          platform :ios, '13.0'

          # Find flutter_root safely
          flutter_root = ENV['FLUTTER_ROOT']
          if flutter_root.nil? || flutter_root.empty?
            flutter_bin = `which flutter`.strip
            raise 'Flutter binary not found in PATH.' if flutter_bin.empty?
            flutter_root = File.expand_path('..', File.dirname(flutter_bin))
          end

          require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

          flutter_ios_podfile_setup

          target 'Runner' do
            # use_frameworks! :linkage => :static   # gerekirse aç
            use_modular_headers!
            flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
          end

          post_install do |installer|
            flutter_additional_ios_build_settings(installer)

            installer.pods_project.targets.each do |t|
              t.build_configurations.each do |config|
                config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
                config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
                # Flutter headers'ı garanti et (Flutter.h not found hatasına karşı)
                current = config.build_settings['HEADER_SEARCH_PATHS'] || '$(inherited)'
                extra   = ' $(PODS_ROOT)/Flutter/Flutter.xcframework/ios-arm64_x86_64-simulator/Headers $(PODS_ROOT)/Headers/Public'
                config.build_settings['HEADER_SEARCH_PATHS'] = "#{current}#{extra}"
              end
            end
          end
          PODFILE
      - name: Clean & install CocoaPods
        script: |
          set -euxo pipefail
          rm -rf ios/Pods ios/Podfile.lock
          cd ios
          pod repo update
          pod deintegrate || true
          pod install --verbose
          cd ..
      - name: Build iOS (Simulator, no codesign)
        script: |
          set -euxo pipefail
          flutter clean
          # Debug sim (en hızlı). Release sim istiyorsan alttakini aç.
          flutter build ios --simulator --debug --no-codesign
          # flutter build ios --simulator --release --no-codesign
      - name: Zip .app artifact
        script: |
          set -euxo pipefail
          APP_DIR="build/ios/iphonesimulator"
          APP_PATH=$(find "$APP_DIR" -maxdepth 1 -name "*.app" | head -n1)
          [ -z "$APP_PATH" ] && { echo "Simulator .app bulunamadı"; exit 1; }
          (cd "$APP_DIR" && zip -r "Runner.app.zip" "$(basename "$APP_PATH")")
          echo "Ziplendi: $APP_DIR/Runner.app.zip"
    artifacts:
      - build/ios/iphonesimulator/*.app
      - build/ios/iphonesimulator/Runner.app.zip
      - flutter_drive.log
