# ios/Podfile
platform :ios, '13.0'

# İhtiyacın varsa bırak; değilse kapatabilirsin.
use_frameworks! :linkage => :static
use_modular_headers!

# FLUTTER_ROOT'u sağlam şekilde bul
def find_flutter_root
  # 1) Generated.xcconfig içinden
  gxc = File.expand_path(File.join('..','Flutter','Generated.xcconfig'), __FILE__)
  if File.exist?(gxc)
    File.foreach(gxc) do |line|
      m = line.match(/FLUTTER_ROOT\=(.*)/)
      return m[1].strip if m
    end
  end
  # 2) Ortam değişkeninden
  fr = ENV['FLUTTER_ROOT']
  if fr && File.exist?(File.join(fr, 'packages', 'flutter_tools', 'bin', 'podhelper'))
    return fr
  end
  # 3) which flutter (…/bin/flutter → SDK kökü = bir üst dizin)
  which_flutter = `which flutter`.strip
  if which_flutter != '' && File.exist?(which_flutter)
    return File.expand_path('..', File.dirname(which_flutter))
  end
  raise 'FLUTTER_ROOT could not be determined'
end

flutter_root = find_flutter_root
require File.expand_path('packages/flutter_tools/bin/podhelper', flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# DİKKAT: flutter_additional_ios_build_settings(target) — installer değil target veriyoruz.
post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)

    # Ek güvenli ayarlar (simülatör ARM64 hariç ve min iOS 13)
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end
end
